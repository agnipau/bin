#!/usr/bin/env bash
# See: https://awesomewm.org/doc/api/libraries/naughty.html

eval "$(slap bash parse _ -- "$@" <<-EOF
name: naughty-send
version: "1.0"
author: Matteo G. <matteoguarda@tutanota.com>
about: "CLI similiar to notify-send that sends notifications to Awesome WM using naughty.notify()"

settings:
    - ArgRequiredElseHelp
    - ColoredHelp

args:
    - text:
        help: "(string) Text of the notification."
        default_value: ""
    - title:
        help: "(string) Title of the notification. (optional)"
        default_value: nil
    - timeout:
        help: "(int) Time in seconds after which popup expires. Set 0 for no timeout."
        default_value: "5"
    - hover_timeout:
        help: "(int) Delay in seconds after which hovered popup disappears. (optional)"
        default_value: nil
    - screen:
        help: "(integer or screen) Target screen for the notification."
        default_value: focused
    - position:
        help: "(string) Corner of the workarea displaying the popups. (default \"top_right\")"
        possible_values:
            - top_right
            - top_left
            - bottom_left
            - bottom_right
            - top_middle
            - bottom_middle
        default_value: top_right
    - ontop:
        help: "(bool) Boolean forcing popups to display on top."
        possible_values:
            - "true"
            - "false"
        default_value: "true"
    - height:
        help: "(int) Popup height. (default \`beautiful.notification_height\` or auto)"
        default_value: nil
    - width:
        help: "(int) Popup width. (default \`beautiful.notification_width\` or auto)"
        default_value: nil
    - max_height:
        help: "(int) Popup maximum height. (default \`beautiful.notification_max_height\` or auto)"
        default_value: nil
    - max_width:
        help: "(int) Popup maximum width. (default \`beautiful.notification_max_width\` or auto)"
        default_value: nil
    - font:
        help: "(string) Notification font. (default \`beautiful.notification_font\` or \`beautiful.font\` or \`awesome.font\`)"
        default_value: nil
    - icon:
        help: "(string) Path to icon. (optional)"
        default_value: nil
    - icon_size:
        help: "(int) Desired icon size in px. (optional)"
        default_value: nil
    - fg:
        help: "(string) Foreground color. (default \`beautiful.notification_fg\` or \`beautiful.fg_focus\` or \`'#ffffff'\`)"
        default_value: nil
    - bg:
        help: "(string) Background color. (default \`beautiful.notification_fg\` or \`beautiful.bg_focus\` or \`'#535d6c'\`)"
        default_value: nil
    - border_width:
        help: "(int) Border width. (default \`beautiful.notification_border_width\` or 1)"
        default_value: nil
    - border_color:
        help: "(string) Border color. (default \`beautiful.notification_border_color\` or \`beautiful.border_focus\` or \`'#535d6c'\`)"
        default_value: nil
    - shape:
        help: "(gears.shape) Widget shape. (default \`beautiful.notification_shape\`)"
        default_value: nil
    - opacity:
        help: "(gears.opacity) Widget opacity. (default \`beautiful.notification_opacity\`)"
        default_value: nil
    - margin:
        help: "(gears.margin) Widget margin. (default \`beautiful.notification_margin\`)"
        default_value: nil
    - run:
        help: "(func) Function to run on left click. The notification object will be passed to it as an argument. You need to call e.g. notification.die(naughty.notificationClosedReason.dismissedByUser) from there to dismiss the notification yourself. (optional)"
        default_value: nil
    - destroy:
        help: "(func) Function to run when notification is destroyed. (optional)"
        default_value: nil
    - preset:
        help: "(table) Table with any of the above parameters. Note: Any parameters specified directly in args will override ones defined in the preset. (optional)"
        default_value: nil
    - replaces_id:
        help: "(int) Replace the notification with the given ID. (optional)"
        default_value: nil
    - callback:
        help: "(func) Function that will be called with all arguments. The notification will only be displayed if the function returns true. Note: this function is only relevant to notifications sent via dbus. (optional)"
        default_value: nil
    - actions:
        help: "(table) Mapping that maps a string to a callback when this action is selected. (optional)"
        default_value: nil
    - ignore_suspend:
        help: "(bool) If set to true this notification will be shown even if notifications are suspended via naughty.suspend."
        possible_values:
            - "true"
            - "false"
        default_value: "false"
EOF
)"; [[ -z "${_success}" ]] && exit 1

# check-requirements-wrapper awesome-client

quote_or_nil() {
    occurs="_$1_occurs"
    vals="_$1_vals"
    if [[ "${!occurs}" -gt 0 ]]; then
        printf '%s' "\"${!vals}\""
    else
        if [[ -n "${!vals}" ]]; then
            printf '%s\n' "${!vals}"
        else
            printf nil
        fi
    fi
}

printf '%s\n%s\n%s\n' \
    "local naughty = require('naughty')" \
    "local notification = naughty.notify({
    text = $(quote_or_nil text),
    title = $(quote_or_nil title),
    timeout = ${_timeout_vals},
    hover_timeout = ${_hover_timeout_vals},
    screen = $(quote_or_nil screen),
    position = $(quote_or_nil position),
    ontop = ${_ontop_vals},
    height = ${_height_vals},
    width = ${_width_vals},
    max_height = ${_max_height_vals},
    max_width = ${_max_width_vals},
    font = $(quote_or_nil font),
    icon = $(quote_or_nil icon),
    icon_size = ${_icon_size_vals},
    fg = $(quote_or_nil fg),
    bg = $(quote_or_nil bg),
    border_width = ${_border_width_vals},
    border_color = $(quote_or_nil border_color),
    shape = ${_shape_vals},
    opacity = ${_opacity_vals},
    margin = ${_margin_vals},
    run = ${_run_vals},
    destroy = ${_destroy_vals},
    preset = ${_preset_vals},
    replaces_id = ${_replaces_id_vals},
    callback = ${_callback_vals},
    actions = ${_actions_vals},
    ignore_suspend = ${_ignore_suspend_vals}
})" \
    "return notification.id" \
    | awesome-client \
    | cut -d' ' -f5

